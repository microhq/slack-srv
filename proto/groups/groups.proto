syntax = "proto3";

package go.micro.srv.slack.group;

import "github.com/micro/slack-srv/proto/common.proto";

service Groups {
	rpc Close(CloseRequest) returns (CloseResponse) {}
	rpc History(HistoryRequest) returns (HistoryResponse) {}
	rpc Info(InfoRequest) returns (InfoResponse) {}
	rpc List(ListRequest) returns (ListResponse) {}
	rpc Mark(MarkRequest) returns (MarkResponse) {}
	rpc Open(OpenRequest) returns (OpenResponse) {}
	rpc SetPurpose(SetPurposeRequest) returns (SetPurposeResponse) {}
	rpc SetTopic(SetTopicRequest) returns (SetTopicResponse) {}
}

message Group {
	string id = 1;
	string name = 2;
	string is_group = 3;
	int64 created = 4;
	int64 creator = 5;
	bool is_archived = 6;
	repeated string members = 7;
	Topic topic = 8;
	Purpose purpose = 9;
	string latest_read = 10;
	Message latest = 11;
	int64 unread_count = 12;
	int64 unread_count_display = 13;
}

message CloseRequest {
	string channel = 1;
}

message CloseResponse {
	bool ok = 1;
	string error = 2;
	bool no_op = 3;
	bool already_closed = 4;
}

message HistoryRequest {
	string channel = 1;
	double latest = 2;
	double oldest = 3;
	int64 inclusive = 4;
	int64 count = 5;
	int64 unreads = 6;
}

message HistoryResponse {
	bool ok = 1;
	string error = 2;
	string latest = 3;
	repeated Message messages = 4;
	bool has_more = 5;
}

message InfoRequest {
	string channel = 1;
}

message InfoResponse {
	bool ok = 1;
	string error = 2;
	Group group = 3;
}

message ListRequest {
	int64 exclude_archived = 1;
}

message ListResponse {
	bool ok = 1;
	string error = 2;
	repeated Group groups = 3;
}

message MarkRequest {
	string channel = 1;
	double ts = 2;
}

message MarkResponse {
	bool ok = 1;
	string error = 2;
}

message OpenRequest {
	string channel = 1;
}

message OpenResponse {
	bool ok = 1;
	string error = 2;
	bool no_op = 3;
	bool already_open = 4;
}

message SetPurposeRequest {
	string channel = 1;
	string purpose = 2;
}

message SetPurposeResponse {
	bool ok = 1;
	string error = 2;
	string purpose = 3;
}

message SetTopicRequest {
	string channel = 1;
	string topic = 2;
}

message SetTopicResponse {
	bool ok = 1;
	string error = 2;
	string topic = 3;
}
