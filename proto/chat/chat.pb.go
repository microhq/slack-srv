// Code generated by protoc-gen-go.
// source: github.com/micro/slack-srv/proto/chat/chat.proto
// DO NOT EDIT!

/*
Package go_micro_srv_slack is a generated protocol buffer package.

It is generated from these files:
	github.com/micro/slack-srv/proto/chat/chat.proto

It has these top-level messages:
	DeleteRequest
	DeleteResponse
	PostMessageRequest
	PostMessageResponse
	UpdateRequest
	UpdateResponse
*/
package go_micro_srv_slack

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import go_micro_srv_slack1 "github.com/micro/slack-srv/proto"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type DeleteRequest struct {
	Ts      float64 `protobuf:"fixed64,1,opt,name=ts" json:"ts,omitempty"`
	Channel string  `protobuf:"bytes,2,opt,name=channel" json:"channel,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DeleteResponse struct {
	Ok      bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Channel string `protobuf:"bytes,3,opt,name=channel" json:"channel,omitempty"`
	Ts      string `protobuf:"bytes,4,opt,name=ts" json:"ts,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PostMessageRequest struct {
	Channel     string `protobuf:"bytes,1,opt,name=channel" json:"channel,omitempty"`
	Text        string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Username    string `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	AsUser      bool   `protobuf:"varint,4,opt,name=as_user" json:"as_user,omitempty"`
	Parse       string `protobuf:"bytes,5,opt,name=parse" json:"parse,omitempty"`
	LinkNames   int64  `protobuf:"varint,6,opt,name=link_names" json:"link_names,omitempty"`
	Attachments string `protobuf:"bytes,7,opt,name=attachments" json:"attachments,omitempty"`
	UnfurlLinks bool   `protobuf:"varint,8,opt,name=unfurl_links" json:"unfurl_links,omitempty"`
	UnfurlMedia bool   `protobuf:"varint,9,opt,name=unfurl_media" json:"unfurl_media,omitempty"`
	IconUrl     string `protobuf:"bytes,10,opt,name=icon_url" json:"icon_url,omitempty"`
	IconEmoji   string `protobuf:"bytes,11,opt,name=icon_emoji" json:"icon_emoji,omitempty"`
}

func (m *PostMessageRequest) Reset()                    { *m = PostMessageRequest{} }
func (m *PostMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*PostMessageRequest) ProtoMessage()               {}
func (*PostMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type PostMessageResponse struct {
	Ok      bool                         `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error   string                       `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Ts      string                       `protobuf:"bytes,3,opt,name=ts" json:"ts,omitempty"`
	Channel string                       `protobuf:"bytes,4,opt,name=channel" json:"channel,omitempty"`
	Message *go_micro_srv_slack1.Message `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
}

func (m *PostMessageResponse) Reset()                    { *m = PostMessageResponse{} }
func (m *PostMessageResponse) String() string            { return proto.CompactTextString(m) }
func (*PostMessageResponse) ProtoMessage()               {}
func (*PostMessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PostMessageResponse) GetMessage() *go_micro_srv_slack1.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type UpdateRequest struct {
	Ts          float64 `protobuf:"fixed64,1,opt,name=ts" json:"ts,omitempty"`
	Channel     string  `protobuf:"bytes,2,opt,name=channel" json:"channel,omitempty"`
	Text        string  `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
	Attachments string  `protobuf:"bytes,4,opt,name=attachments" json:"attachments,omitempty"`
	Parse       string  `protobuf:"bytes,5,opt,name=parse" json:"parse,omitempty"`
	LinkNames   int64   `protobuf:"varint,6,opt,name=link_names" json:"link_names,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type UpdateResponse struct {
	Ok      bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Channel string `protobuf:"bytes,3,opt,name=channel" json:"channel,omitempty"`
	Ts      string `protobuf:"bytes,4,opt,name=ts" json:"ts,omitempty"`
	Text    string `protobuf:"bytes,5,opt,name=text" json:"text,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto.RegisterType((*DeleteRequest)(nil), "go.micro.srv.slack.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "go.micro.srv.slack.DeleteResponse")
	proto.RegisterType((*PostMessageRequest)(nil), "go.micro.srv.slack.PostMessageRequest")
	proto.RegisterType((*PostMessageResponse)(nil), "go.micro.srv.slack.PostMessageResponse")
	proto.RegisterType((*UpdateRequest)(nil), "go.micro.srv.slack.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "go.micro.srv.slack.UpdateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Chat service

type ChatClient interface {
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	PostMessage(ctx context.Context, in *PostMessageRequest, opts ...client.CallOption) (*PostMessageResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
}

type chatClient struct {
	c           client.Client
	serviceName string
}

func NewChatClient(serviceName string, c client.Client) ChatClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.slack"
	}
	return &chatClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *chatClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Chat.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) PostMessage(ctx context.Context, in *PostMessageRequest, opts ...client.CallOption) (*PostMessageResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Chat.PostMessage", in)
	out := new(PostMessageResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Chat.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Chat service

type ChatHandler interface {
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	PostMessage(context.Context, *PostMessageRequest, *PostMessageResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
}

func RegisterChatHandler(s server.Server, hdlr ChatHandler) {
	s.Handle(s.NewHandler(&Chat{hdlr}))
}

type Chat struct {
	ChatHandler
}

func (h *Chat) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.ChatHandler.Delete(ctx, in, out)
}

func (h *Chat) PostMessage(ctx context.Context, in *PostMessageRequest, out *PostMessageResponse) error {
	return h.ChatHandler.PostMessage(ctx, in, out)
}

func (h *Chat) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.ChatHandler.Update(ctx, in, out)
}

var fileDescriptor0 = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xad, 0x93, 0x34, 0x49, 0x27, 0x4d, 0x41, 0x5b, 0x0e, 0xab, 0x70, 0x01, 0x1f, 0x80, 0x43,
	0x6b, 0xa3, 0xf2, 0x09, 0x70, 0xe0, 0x82, 0x04, 0x48, 0x70, 0x35, 0x5b, 0x77, 0x48, 0x4c, 0xbc,
	0xbb, 0x66, 0x77, 0x8d, 0x90, 0xf8, 0x07, 0xbe, 0x91, 0x4f, 0x61, 0x3d, 0x9b, 0x98, 0xb8, 0xb5,
	0x30, 0x12, 0x97, 0x48, 0x79, 0x79, 0xf3, 0xde, 0xdb, 0x37, 0x13, 0x78, 0xbe, 0x2e, 0xdc, 0xa6,
	0xbe, 0x4e, 0x72, 0x2d, 0x53, 0x59, 0xe4, 0x46, 0xa7, 0xb6, 0x14, 0xf9, 0xf6, 0xd2, 0x9a, 0x6f,
	0x69, 0x65, 0xb4, 0xd3, 0x69, 0xbe, 0x11, 0x8e, 0x3e, 0x12, 0xfa, 0xce, 0xd8, 0x5a, 0x27, 0xc4,
	0x4c, 0x3c, 0x27, 0x21, 0xf6, 0xea, 0x72, 0x58, 0x45, 0x4b, 0xa9, 0x55, 0x90, 0x88, 0x2f, 0x60,
	0xf9, 0x0a, 0x4b, 0x74, 0xf8, 0x1e, 0xbf, 0xd6, 0x68, 0x1d, 0x03, 0x18, 0x39, 0xcb, 0xa3, 0x47,
	0xd1, 0xb3, 0x88, 0xdd, 0x83, 0x99, 0x77, 0x53, 0x0a, 0x4b, 0x3e, 0xf2, 0xc0, 0x49, 0xfc, 0x1a,
	0xce, 0xf6, 0x6c, 0x5b, 0x69, 0x65, 0xb1, 0xa1, 0xeb, 0x2d, 0xd1, 0xe7, 0x6c, 0x09, 0xc7, 0x68,
	0x8c, 0x36, 0x81, 0x7c, 0x38, 0x3d, 0x26, 0x20, 0x48, 0x4f, 0x48, 0xe9, 0x57, 0x04, 0xec, 0xad,
	0xb6, 0xee, 0x0d, 0x5a, 0x2b, 0xd6, 0xad, 0xfb, 0xc1, 0x4c, 0x44, 0x33, 0xa7, 0x30, 0x71, 0xf8,
	0xdd, 0xed, 0x24, 0xef, 0xc3, 0xbc, 0xb6, 0x68, 0x94, 0x90, 0xb8, 0xd3, 0xf4, 0x03, 0xc2, 0x66,
	0x0d, 0x48, 0xc2, 0x14, 0xa2, 0x12, 0xc6, 0x22, 0x3f, 0xa6, 0xdf, 0xbd, 0x69, 0x59, 0xa8, 0x6d,
	0xd6, 0x8c, 0x58, 0x3e, 0xf5, 0xd8, 0x98, 0x9d, 0xc3, 0x42, 0x38, 0x27, 0xf2, 0x8d, 0x44, 0xe5,
	0x03, 0xcd, 0x88, 0xf8, 0x00, 0x4e, 0x6b, 0xf5, 0xb9, 0x36, 0x65, 0xd6, 0xf0, 0x2d, 0x9f, 0x93,
	0xda, 0x1f, 0x54, 0xe2, 0x4d, 0x21, 0xf8, 0x09, 0xa1, 0x3e, 0x46, 0x91, 0x6b, 0x95, 0x79, 0x9c,
	0xc3, 0xde, 0x86, 0x10, 0x94, 0xfa, 0x4b, 0xc1, 0x17, 0xf4, 0xc4, 0x1f, 0x70, 0xde, 0x79, 0xe1,
	0x70, 0x63, 0xa1, 0xa0, 0xf1, 0xed, 0xf6, 0xa8, 0x31, 0x76, 0x01, 0x33, 0x19, 0xa4, 0xe8, 0x69,
	0x8b, 0xab, 0x87, 0xc9, 0xdd, 0xf5, 0x27, 0x3b, 0xb7, 0xd8, 0xc0, 0xf2, 0x43, 0x75, 0x23, 0xfe,
	0x6d, 0xaf, 0x6d, 0xcb, 0xc1, 0xfa, 0x56, 0x3f, 0xc1, 0x7e, 0xb8, 0xd7, 0xf8, 0x23, 0x9c, 0xed,
	0x3d, 0xff, 0xef, 0x3a, 0xda, 0x3c, 0xe4, 0x75, 0xf5, 0x73, 0x04, 0x93, 0x97, 0xfe, 0xea, 0xd9,
	0x3b, 0x98, 0x86, 0xf3, 0x63, 0x8f, 0xfb, 0xde, 0xde, 0x39, 0xe4, 0x55, 0xfc, 0x37, 0x4a, 0xc8,
	0x17, 0x1f, 0xb1, 0x4f, 0xb0, 0x38, 0x58, 0x12, 0x7b, 0xd2, 0x37, 0x74, 0xf7, 0x4e, 0x57, 0x4f,
	0x07, 0x79, 0xad, 0x83, 0x0f, 0x1d, 0x5a, 0xe9, 0x0f, 0xdd, 0xd9, 0x52, 0x7f, 0xe8, 0x6e, 0xa9,
	0xf1, 0xd1, 0xf5, 0x94, 0xfe, 0xbb, 0x2f, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x37, 0xf7, 0x83,
	0x36, 0x32, 0x04, 0x00, 0x00,
}
