// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/micro/slack-srv/proto/users/users.proto

/*
Package go_micro_srv_slack_users is a generated protocol buffer package.

It is generated from these files:
	github.com/micro/slack-srv/proto/users/users.proto

It has these top-level messages:
	Profile
	User
	GetPresenceRequest
	GetPresenceResponse
	SetPresenceRequest
	SetPresenceResponse
	InfoRequest
	InfoResponse
	ListRequest
	ListResponse
*/
package go_micro_srv_slack_users

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Profile struct {
	FirstName string `protobuf:"bytes,1,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,2,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	RealName  string `protobuf:"bytes,3,opt,name=real_name,json=realName" json:"real_name,omitempty"`
	Email     string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Skype     string `protobuf:"bytes,5,opt,name=skype" json:"skype,omitempty"`
	Phone     string `protobuf:"bytes,6,opt,name=phone" json:"phone,omitempty"`
	Image_24  string `protobuf:"bytes,7,opt,name=image_24,json=image24" json:"image_24,omitempty"`
	Image_32  string `protobuf:"bytes,8,opt,name=image_32,json=image32" json:"image_32,omitempty"`
	Image_48  string `protobuf:"bytes,9,opt,name=image_48,json=image48" json:"image_48,omitempty"`
	Image_72  string `protobuf:"bytes,10,opt,name=image_72,json=image72" json:"image_72,omitempty"`
	Image_192 string `protobuf:"bytes,11,opt,name=image_192,json=image192" json:"image_192,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Profile) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Profile) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Profile) GetRealName() string {
	if m != nil {
		return m.RealName
	}
	return ""
}

func (m *Profile) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Profile) GetSkype() string {
	if m != nil {
		return m.Skype
	}
	return ""
}

func (m *Profile) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Profile) GetImage_24() string {
	if m != nil {
		return m.Image_24
	}
	return ""
}

func (m *Profile) GetImage_32() string {
	if m != nil {
		return m.Image_32
	}
	return ""
}

func (m *Profile) GetImage_48() string {
	if m != nil {
		return m.Image_48
	}
	return ""
}

func (m *Profile) GetImage_72() string {
	if m != nil {
		return m.Image_72
	}
	return ""
}

func (m *Profile) GetImage_192() string {
	if m != nil {
		return m.Image_192
	}
	return ""
}

type User struct {
	Id       string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name     string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Deleted  bool     `protobuf:"varint,3,opt,name=deleted" json:"deleted,omitempty"`
	Color    string   `protobuf:"bytes,4,opt,name=color" json:"color,omitempty"`
	Profile  *Profile `protobuf:"bytes,5,opt,name=profile" json:"profile,omitempty"`
	IsAdmin  bool     `protobuf:"varint,6,opt,name=is_admin,json=isAdmin" json:"is_admin,omitempty"`
	IsOwner  bool     `protobuf:"varint,7,opt,name=is_owner,json=isOwner" json:"is_owner,omitempty"`
	Has_2Fa  bool     `protobuf:"varint,8,opt,name=has_2fa,json=has2fa" json:"has_2fa,omitempty"`
	HasFiles bool     `protobuf:"varint,9,opt,name=has_files,json=hasFiles" json:"has_files,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *User) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *User) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *User) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *User) GetIsOwner() bool {
	if m != nil {
		return m.IsOwner
	}
	return false
}

func (m *User) GetHas_2Fa() bool {
	if m != nil {
		return m.Has_2Fa
	}
	return false
}

func (m *User) GetHasFiles() bool {
	if m != nil {
		return m.HasFiles
	}
	return false
}

type GetPresenceRequest struct {
	User string `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *GetPresenceRequest) Reset()                    { *m = GetPresenceRequest{} }
func (m *GetPresenceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPresenceRequest) ProtoMessage()               {}
func (*GetPresenceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetPresenceRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type GetPresenceResponse struct {
	Ok              bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error           string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Presence        string `protobuf:"bytes,3,opt,name=presence" json:"presence,omitempty"`
	Online          bool   `protobuf:"varint,4,opt,name=online" json:"online,omitempty"`
	AutoAway        bool   `protobuf:"varint,5,opt,name=auto_away,json=autoAway" json:"auto_away,omitempty"`
	ManualAway      bool   `protobuf:"varint,6,opt,name=manual_away,json=manualAway" json:"manual_away,omitempty"`
	ConnectionCount int64  `protobuf:"varint,7,opt,name=connection_count,json=connectionCount" json:"connection_count,omitempty"`
	LastActivity    int64  `protobuf:"varint,8,opt,name=last_activity,json=lastActivity" json:"last_activity,omitempty"`
}

func (m *GetPresenceResponse) Reset()                    { *m = GetPresenceResponse{} }
func (m *GetPresenceResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPresenceResponse) ProtoMessage()               {}
func (*GetPresenceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetPresenceResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *GetPresenceResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *GetPresenceResponse) GetPresence() string {
	if m != nil {
		return m.Presence
	}
	return ""
}

func (m *GetPresenceResponse) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

func (m *GetPresenceResponse) GetAutoAway() bool {
	if m != nil {
		return m.AutoAway
	}
	return false
}

func (m *GetPresenceResponse) GetManualAway() bool {
	if m != nil {
		return m.ManualAway
	}
	return false
}

func (m *GetPresenceResponse) GetConnectionCount() int64 {
	if m != nil {
		return m.ConnectionCount
	}
	return 0
}

func (m *GetPresenceResponse) GetLastActivity() int64 {
	if m != nil {
		return m.LastActivity
	}
	return 0
}

type SetPresenceRequest struct {
	Presence string `protobuf:"bytes,1,opt,name=presence" json:"presence,omitempty"`
}

func (m *SetPresenceRequest) Reset()                    { *m = SetPresenceRequest{} }
func (m *SetPresenceRequest) String() string            { return proto.CompactTextString(m) }
func (*SetPresenceRequest) ProtoMessage()               {}
func (*SetPresenceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SetPresenceRequest) GetPresence() string {
	if m != nil {
		return m.Presence
	}
	return ""
}

type SetPresenceResponse struct {
	Ok    bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *SetPresenceResponse) Reset()                    { *m = SetPresenceResponse{} }
func (m *SetPresenceResponse) String() string            { return proto.CompactTextString(m) }
func (*SetPresenceResponse) ProtoMessage()               {}
func (*SetPresenceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SetPresenceResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *SetPresenceResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type InfoRequest struct {
	User string `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *InfoRequest) Reset()                    { *m = InfoRequest{} }
func (m *InfoRequest) String() string            { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()               {}
func (*InfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *InfoRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type InfoResponse struct {
	Ok    bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	User  *User  `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
}

func (m *InfoResponse) Reset()                    { *m = InfoResponse{} }
func (m *InfoResponse) String() string            { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()               {}
func (*InfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *InfoResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *InfoResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *InfoResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type ListRequest struct {
	Presence int64 `protobuf:"varint,1,opt,name=presence" json:"presence,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListRequest) GetPresence() int64 {
	if m != nil {
		return m.Presence
	}
	return 0
}

type ListResponse struct {
	Ok      bool    `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error   string  `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Members []*User `protobuf:"bytes,3,rep,name=members" json:"members,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ListResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *ListResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ListResponse) GetMembers() []*User {
	if m != nil {
		return m.Members
	}
	return nil
}

func init() {
	proto.RegisterType((*Profile)(nil), "go.micro.srv.slack.users.Profile")
	proto.RegisterType((*User)(nil), "go.micro.srv.slack.users.User")
	proto.RegisterType((*GetPresenceRequest)(nil), "go.micro.srv.slack.users.GetPresenceRequest")
	proto.RegisterType((*GetPresenceResponse)(nil), "go.micro.srv.slack.users.GetPresenceResponse")
	proto.RegisterType((*SetPresenceRequest)(nil), "go.micro.srv.slack.users.SetPresenceRequest")
	proto.RegisterType((*SetPresenceResponse)(nil), "go.micro.srv.slack.users.SetPresenceResponse")
	proto.RegisterType((*InfoRequest)(nil), "go.micro.srv.slack.users.InfoRequest")
	proto.RegisterType((*InfoResponse)(nil), "go.micro.srv.slack.users.InfoResponse")
	proto.RegisterType((*ListRequest)(nil), "go.micro.srv.slack.users.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "go.micro.srv.slack.users.ListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Users service

type UsersClient interface {
	GetPresence(ctx context.Context, in *GetPresenceRequest, opts ...grpc.CallOption) (*GetPresenceResponse, error)
	SetPresence(ctx context.Context, in *SetPresenceRequest, opts ...grpc.CallOption) (*SetPresenceResponse, error)
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type usersClient struct {
	cc *grpc.ClientConn
}

func NewUsersClient(cc *grpc.ClientConn) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) GetPresence(ctx context.Context, in *GetPresenceRequest, opts ...grpc.CallOption) (*GetPresenceResponse, error) {
	out := new(GetPresenceResponse)
	err := grpc.Invoke(ctx, "/go.micro.srv.slack.users.Users/GetPresence", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) SetPresence(ctx context.Context, in *SetPresenceRequest, opts ...grpc.CallOption) (*SetPresenceResponse, error) {
	out := new(SetPresenceResponse)
	err := grpc.Invoke(ctx, "/go.micro.srv.slack.users.Users/SetPresence", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := grpc.Invoke(ctx, "/go.micro.srv.slack.users.Users/Info", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/go.micro.srv.slack.users.Users/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Users service

type UsersServer interface {
	GetPresence(context.Context, *GetPresenceRequest) (*GetPresenceResponse, error)
	SetPresence(context.Context, *SetPresenceRequest) (*SetPresenceResponse, error)
	Info(context.Context, *InfoRequest) (*InfoResponse, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
}

func RegisterUsersServer(s *grpc.Server, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_GetPresence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPresenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetPresence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.micro.srv.slack.users.Users/GetPresence",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetPresence(ctx, req.(*GetPresenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_SetPresence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPresenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).SetPresence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.micro.srv.slack.users.Users/SetPresence",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).SetPresence(ctx, req.(*SetPresenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.micro.srv.slack.users.Users/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Info(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.micro.srv.slack.users.Users/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "go.micro.srv.slack.users.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPresence",
			Handler:    _Users_GetPresence_Handler,
		},
		{
			MethodName: "SetPresence",
			Handler:    _Users_SetPresence_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _Users_Info_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Users_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/micro/slack-srv/proto/users/users.proto",
}

func init() { proto.RegisterFile("github.com/micro/slack-srv/proto/users/users.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 693 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xdd, 0x6a, 0xdb, 0x48,
	0x14, 0x8e, 0x2d, 0xc7, 0x92, 0x8f, 0xb3, 0x3f, 0x4c, 0x96, 0x5d, 0x6d, 0x96, 0x6d, 0x13, 0x95,
	0x96, 0x04, 0x1a, 0xb9, 0x99, 0x18, 0x92, 0x90, 0xab, 0x50, 0x68, 0x29, 0x94, 0x36, 0xc8, 0x94,
	0x5e, 0x9a, 0x89, 0x3c, 0x8e, 0x07, 0x4b, 0x33, 0xee, 0x8c, 0x9c, 0xe0, 0xeb, 0x3e, 0x43, 0x1f,
	0xa3, 0x8f, 0x58, 0x28, 0x73, 0x46, 0xc2, 0x0a, 0xa9, 0xd3, 0xa4, 0x37, 0x46, 0xdf, 0x8f, 0xce,
	0xcc, 0xf9, 0xce, 0x11, 0x06, 0x7a, 0x29, 0x8a, 0xc9, 0xfc, 0x22, 0x4e, 0x55, 0xde, 0xcb, 0x45,
	0xaa, 0x55, 0xcf, 0x64, 0x2c, 0x9d, 0xee, 0x1b, 0x7d, 0xd5, 0x9b, 0x69, 0x55, 0xa8, 0xde, 0xdc,
	0x70, 0x6d, 0xdc, 0x6f, 0x8c, 0x0c, 0x09, 0x2f, 0x55, 0x8c, 0xde, 0xd8, 0xe8, 0xab, 0x18, 0xfd,
	0x31, 0xea, 0xd1, 0xd7, 0x26, 0xf8, 0xe7, 0x5a, 0x8d, 0x45, 0xc6, 0xc9, 0xff, 0x00, 0x63, 0xa1,
	0x4d, 0x31, 0x94, 0x2c, 0xe7, 0x61, 0x63, 0xbb, 0xb1, 0xdb, 0x49, 0x3a, 0xc8, 0xbc, 0x63, 0x39,
	0x27, 0xff, 0x41, 0x27, 0x63, 0x95, 0xda, 0x44, 0x35, 0xb0, 0x44, 0x25, 0x6a, 0xce, 0x32, 0x27,
	0x7a, 0x4e, 0xb4, 0x04, 0x8a, 0x7f, 0xc1, 0x3a, 0xcf, 0x99, 0xc8, 0xc2, 0x16, 0x0a, 0x0e, 0x58,
	0xd6, 0x4c, 0x17, 0x33, 0x1e, 0xae, 0x3b, 0x16, 0x81, 0x65, 0x67, 0x13, 0x25, 0x79, 0xd8, 0x76,
	0x2c, 0x02, 0xf2, 0x2f, 0x04, 0x22, 0x67, 0x97, 0x7c, 0x48, 0xfb, 0xa1, 0x8f, 0x82, 0x8f, 0x98,
	0xf6, 0x97, 0xd2, 0x21, 0x0d, 0x83, 0x9a, 0x74, 0x48, 0x97, 0x52, 0xff, 0x38, 0xec, 0xd4, 0xa4,
	0xfe, 0xf1, 0x52, 0x3a, 0xa2, 0x21, 0xd4, 0xa4, 0x23, 0x6a, 0x5b, 0x71, 0xd2, 0xc1, 0x09, 0x0d,
	0xbb, 0xae, 0x15, 0x24, 0x0e, 0x4e, 0x68, 0xf4, 0xb9, 0x09, 0xad, 0x0f, 0x86, 0x6b, 0xf2, 0x3b,
	0x34, 0xc5, 0xa8, 0x0c, 0xa9, 0x29, 0x46, 0x84, 0x40, 0xab, 0x16, 0x0c, 0x3e, 0x93, 0x10, 0xfc,
	0x11, 0xcf, 0x78, 0xc1, 0x47, 0x18, 0x49, 0x90, 0x54, 0xd0, 0x76, 0x99, 0xaa, 0x4c, 0xe9, 0x2a,
	0x11, 0x04, 0xe4, 0x14, 0xfc, 0x99, 0x9b, 0x05, 0x66, 0xd2, 0xa5, 0x3b, 0xf1, 0xaa, 0xc1, 0xc5,
	0xe5, 0xd0, 0x92, 0xea, 0x0d, 0xec, 0xc8, 0x0c, 0xd9, 0x28, 0x17, 0x12, 0xb3, 0x0b, 0x12, 0x5f,
	0x98, 0x33, 0x0b, 0x4b, 0x49, 0x5d, 0x4b, 0xae, 0x31, 0x3d, 0x94, 0xde, 0x5b, 0x48, 0xfe, 0x01,
	0x7f, 0xc2, 0xcc, 0x90, 0x8e, 0x19, 0x86, 0x17, 0x24, 0xed, 0x09, 0x33, 0x74, 0xcc, 0x6c, 0x0a,
	0x56, 0xb0, 0xa5, 0x0d, 0x86, 0x17, 0x24, 0xc1, 0x84, 0x99, 0x57, 0x16, 0x47, 0xbb, 0x40, 0x5e,
	0xf3, 0xe2, 0x5c, 0x73, 0xc3, 0x65, 0xca, 0x13, 0xfe, 0x69, 0xce, 0x4d, 0x61, 0x23, 0xb0, 0x77,
	0x2b, 0x43, 0xc1, 0xe7, 0xe8, 0x5b, 0x03, 0x36, 0x6f, 0x58, 0xcd, 0x4c, 0x49, 0xc3, 0x6d, 0x7c,
	0x6a, 0x8a, 0xce, 0x20, 0x69, 0xaa, 0x29, 0xae, 0x88, 0xd6, 0x4a, 0x97, 0xf9, 0x39, 0x40, 0xb6,
	0x20, 0x98, 0x95, 0x6f, 0x56, 0x4b, 0x55, 0x61, 0xf2, 0x37, 0xb4, 0x95, 0xcc, 0x84, 0xe4, 0x98,
	0x61, 0x90, 0x94, 0xc8, 0x5e, 0x9c, 0xcd, 0x0b, 0x35, 0x64, 0xd7, 0x6c, 0x81, 0x31, 0x06, 0x49,
	0x60, 0x89, 0xb3, 0x6b, 0xb6, 0x20, 0x8f, 0xa1, 0x9b, 0x33, 0x39, 0x67, 0x99, 0x93, 0x5d, 0x4e,
	0xe0, 0x28, 0x34, 0xec, 0xc1, 0x9f, 0xa9, 0x92, 0x92, 0xa7, 0x85, 0x50, 0x72, 0x98, 0xaa, 0xb9,
	0x2c, 0x30, 0x32, 0x2f, 0xf9, 0x63, 0xc9, 0xbf, 0xb4, 0x34, 0x79, 0x02, 0xbf, 0xe1, 0xf7, 0xc0,
	0xd2, 0x42, 0x5c, 0x89, 0x62, 0x81, 0x01, 0x7a, 0xc9, 0x86, 0x25, 0xcf, 0x4a, 0x2e, 0x7a, 0x01,
	0x64, 0x70, 0x3b, 0xa9, 0x7a, 0x5f, 0x8d, 0x9b, 0x7d, 0x45, 0xa7, 0xb0, 0x39, 0xf8, 0xd5, 0xc0,
	0xa2, 0x1d, 0xe8, 0xbe, 0x91, 0x63, 0x75, 0xd7, 0x44, 0x26, 0xb0, 0xe1, 0x2c, 0x0f, 0x9a, 0x04,
	0x2d, 0x2b, 0x79, 0xb8, 0x97, 0x8f, 0x56, 0xef, 0xa5, 0xfd, 0x38, 0xca, 0x93, 0xf6, 0xa0, 0xfb,
	0x56, 0x98, 0x62, 0x55, 0xd3, 0x5e, 0xad, 0x69, 0x09, 0x1b, 0xce, 0xfa, 0xa0, 0x4b, 0x1d, 0x83,
	0x9f, 0xf3, 0xfc, 0x82, 0x6b, 0x13, 0x7a, 0xdb, 0xde, 0x3d, 0xee, 0x55, 0xd9, 0xe9, 0x17, 0x0f,
	0xd6, 0x2d, 0x63, 0x48, 0x06, 0xdd, 0xda, 0x7e, 0x92, 0xe7, 0xab, 0x2b, 0xdc, 0xde, 0xf8, 0xad,
	0xfd, 0x7b, 0xba, 0x5d, 0x57, 0xd1, 0x9a, 0x3d, 0x6d, 0x70, 0xbf, 0xd3, 0x06, 0x0f, 0x3a, 0x6d,
	0xf0, 0xc3, 0xd3, 0x3e, 0x42, 0xcb, 0x8e, 0x9a, 0x3c, 0x5d, 0xfd, 0x62, 0x6d, 0x5b, 0xb6, 0x9e,
	0xfd, 0xcc, 0x56, 0x2f, 0x6c, 0xc7, 0x75, 0x57, 0xe1, 0xda, 0xe4, 0xef, 0x2a, 0x5c, 0x9f, 0x7a,
	0xb4, 0x76, 0xd1, 0xc6, 0xff, 0xab, 0xc3, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x6f, 0x36,
	0x5a, 0xe5, 0x06, 0x00, 0x00,
}
