// Code generated by protoc-gen-go.
// source: github.com/micro/slack-srv/proto/rtm/rtm.proto
// DO NOT EDIT!

/*
Package go_micro_srv_slack_rtm is a generated protocol buffer package.

It is generated from these files:
	github.com/micro/slack-srv/proto/rtm/rtm.proto

It has these top-level messages:
	StartRequest
	StartResponse
*/
package go_micro_srv_slack_rtm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type StartRequest struct {
	SimpleLatest bool `protobuf:"varint,1,opt,name=simple_latest" json:"simple_latest,omitempty"`
	NoUnreads    bool `protobuf:"varint,2,opt,name=no_unreads" json:"no_unreads,omitempty"`
	MpimAware    bool `protobuf:"varint,3,opt,name=mpim_aware" json:"mpim_aware,omitempty"`
}

func (m *StartRequest) Reset()                    { *m = StartRequest{} }
func (m *StartRequest) String() string            { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()               {}
func (*StartRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StartResponse struct {
	Ok    bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *StartResponse) Reset()                    { *m = StartResponse{} }
func (m *StartResponse) String() string            { return proto.CompactTextString(m) }
func (*StartResponse) ProtoMessage()               {}
func (*StartResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*StartRequest)(nil), "go.micro.srv.slack.rtm.StartRequest")
	proto.RegisterType((*StartResponse)(nil), "go.micro.srv.slack.rtm.StartResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Rtm service

type RtmClient interface {
	Start(ctx context.Context, in *StartRequest, opts ...client.CallOption) (*StartResponse, error)
}

type rtmClient struct {
	c           client.Client
	serviceName string
}

func NewRtmClient(serviceName string, c client.Client) RtmClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.slack.rtm"
	}
	return &rtmClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *rtmClient) Start(ctx context.Context, in *StartRequest, opts ...client.CallOption) (*StartResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Rtm.Start", in)
	out := new(StartResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Rtm service

type RtmHandler interface {
	Start(context.Context, *StartRequest, *StartResponse) error
}

func RegisterRtmHandler(s server.Server, hdlr RtmHandler) {
	s.Handle(s.NewHandler(&Rtm{hdlr}))
}

type Rtm struct {
	RtmHandler
}

func (h *Rtm) Start(ctx context.Context, in *StartRequest, out *StartResponse) error {
	return h.RtmHandler.Start(ctx, in, out)
}

var fileDescriptor0 = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x8f, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0xdd, 0x5d, 0x56, 0x74, 0xb0, 0x97, 0x80, 0x52, 0x3c, 0x49, 0x51, 0x10, 0xc1, 0x09,
	0xe8, 0xef, 0xf0, 0x52, 0xc1, 0x9b, 0x94, 0xb4, 0x86, 0x1a, 0xda, 0x74, 0xe2, 0x64, 0xaa, 0x7f,
	0xdf, 0x34, 0x56, 0xf0, 0x20, 0xec, 0x21, 0x87, 0xbc, 0xf9, 0xde, 0x9b, 0x37, 0x80, 0xbd, 0x93,
	0xf7, 0xb9, 0xc5, 0x8e, 0xbc, 0xf6, 0xae, 0x63, 0xd2, 0x71, 0x34, 0xdd, 0x70, 0x1f, 0xf9, 0x53,
	0x07, 0x26, 0x21, 0xcd, 0xe2, 0x97, 0x87, 0xf9, 0xa7, 0x2e, 0x7a, 0xc2, 0xcc, 0x61, 0x22, 0x30,
	0xb3, 0x98, 0xa6, 0xd5, 0x13, 0x9c, 0x3d, 0x8b, 0x61, 0xa9, 0xed, 0xc7, 0x6c, 0xa3, 0xa8, 0x73,
	0x28, 0xa2, 0xf3, 0x61, 0xb4, 0xcd, 0x68, 0x24, 0x09, 0xe5, 0xe6, 0x6a, 0x73, 0x7b, 0xa2, 0x14,
	0xc0, 0x44, 0xcd, 0x3c, 0xb1, 0x35, 0x6f, 0xb1, 0xdc, 0xfe, 0x6a, 0x3e, 0x38, 0xdf, 0x98, 0x2f,
	0xc3, 0xb6, 0xdc, 0x2d, 0x5a, 0x75, 0x07, 0xc5, 0x1a, 0x17, 0x03, 0x4d, 0xd1, 0x26, 0x66, 0x4b,
	0xc3, 0x1a, 0x52, 0xc0, 0xde, 0x32, 0x13, 0x67, 0xff, 0xe9, 0xc3, 0x2b, 0xec, 0x6a, 0xf1, 0xea,
	0x05, 0xf6, 0xd9, 0xa2, 0xae, 0xf1, 0xff, 0x8e, 0xf8, 0xb7, 0xe0, 0xe5, 0xcd, 0x01, 0xea, 0x67,
	0x6f, 0x75, 0xd4, 0x1e, 0xe7, 0xc3, 0x1f, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x2e, 0xac, 0x10,
	0x18, 0x2a, 0x01, 0x00, 0x00,
}
